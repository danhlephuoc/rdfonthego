#summary This tutorial will explain how to use RDFonthego.

= Introduction =

 RDF Onthego is project to build RDF store and query processor on Android phone.
 For more information: <a href='http://iswc2010.semanticweb.org/pdf/503.pdf'>RDF On the Go</a>

==1. Setup project:==
 * Step 1:<a href='http://developer.android.com/sdk/installing.html'>Create a Android project.</a>
 RDFOnthego requires Android 2.1 or later version. And don't forget to add WRITE_EXTERNAL_STORAGE permission to your project.
    
 * Step 2: Adding rdfonthego external jar file to your Android project
 
  - <a href='http://rdfonthego.googlecode.com/files/je-android-4.1.10.jar'>je-andoird-4.1.10.jar</a>. Berkeley DB JE for Android (Required!)
 
  - <a href='http://rdfonthego.googlecode.com/files/deri.org.rdfonthego.core.jar'>deri.org.rdfonthgo.core.jar</a> Jena SW toolkit with RDF store built in(Required!)

 - <a href='http://rdfonthego.googlecode.com/files/deri.org.rdfonthego.spatial.jar'>deri.org.rdfonthego.spatial.jar</a> (Optional!). The spatial indexing packages.

 - <a href='http://rdfonthego.googlecode.com/files/lucene-core-2.3.1.jar'>lucene-core-2.3.1.jar</a> and <a href='http://rdfonthego.googlecode.com/files/deri.org.rdfonthego.lucene.jar'>deri.org.rdfonthego.lucene.jar</a> (Optional!) The lucene packages.

==2. Working with RDFOnthego ==
  
 RDFOnthego based on <a href='http://jena.sourceforge.net/'>Jena Semantic Web</a> framework, so that it works like Jena. If you are not familiar with Jena please take a look at <a href = 'http://jena.sourceforge.net/tutorial/RDF_API/index.html'> Jena Tutorial.</a>
 
=== 2.1 Create a Graph ===
 BDBGraph is extended class of <a href='http://jena.sourceforge.net/javadoc/com/hp/hpl/jena/graph/Graph.html'>Jena Graph interface</a>. It is used as a store handler with methods working with triples such as adding, deleting, saving. There are 2 ways to create a BDBGraph, using *Factory.createBDBGraph(storeName)* function or create a new graph by *new BDBGraph(storeName)*.

=== 2.2 Adding Triples ===
 There are 3 ways to add triple to graph(store): 
 * Add a single triple to graph:
<ol>  Node s,p,o;</ol>
<ol>  Triple = new Triple (s,p,o);</ol>
<ol>  graph.add(t); </ol>
 
 * Load Triple from file:
      graph.load(String filePath, String baseUri)
  
 * Load Triple from an URL
      graph.load(String url, String baseUri)

 